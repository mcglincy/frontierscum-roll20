.frontierscum {
  input[type='number'],
  input[type='text'] {
    border: 0;
    outline: 0;
    background: transparent;
    border-bottom: $dotted;
    font-family: $mono-font;
    font-size: 1.8rem;
    text-align: center;
  }

  textarea {
    background-color: $light-gray;
    border: none;
    font-family: $mono-font;
    font-size: 1.8rem;
    resize: none;
  }

  .top-label {
    background-color: black;
    color: white;
    font-family: $label-font;
    font-size: 2.5rem;
    text-align: center;
    text-transform: uppercase;
  }

  // undo some Roll20 label styles
  // TODO: where should this live?
  label {
    display: inline;
    margin: 0;
    padding: 0;
    width: unset;
  }  

  .check-container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-bottom: 12px;
    cursor: pointer;
    font-size: 22px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  /* Hide the browser's default checkbox */
  .check-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: -3px;
    left: 12px;
    height: 18px;
    width: 18px;
    border-radius: 50%;
    border: 1px dotted black;
    font-size: 2rem;
  }

  /* On mouse-over, add a grey background color */
  // .check-container:hover input ~ .checkmark {
  //   background-color: #ccc;
  // }

  /* When the checkbox is checked, add a blue background */
  .check-container input:checked ~ .checkmark {
    background-color: black;
  }

  .check-checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

  .check-container input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the checkmark/indicator */
  // .check-container .checkmark:after {
  //   left: 9px;
  //   top: 5px;
  //   width: 5px;
  //   height: 10px;
  //   border: solid white;
  //   border-width: 0 3px 3px 0;
  //   -webkit-transform: rotate(45deg);
  //   -ms-transform: rotate(45deg);
  //   transform: rotate(45deg);
  // }  
}
